{"version":3,"sources":["assets/images/burger-logo.png","components/Layout/Logo/Logo.js","components/Navigation/NavigationItem/NavigationItem/NavigationItem.js","components/Navigation/NavigationItem/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","logo","props","className","style","height","src","burgerLogo","alt","navigationItem","href","link","children","navigationItems","toolbar","sideDrawer","Layout","BurgerIngredient","ingredient","this","type","Component","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","console","log","BuildControl","label","onClick","removed","disabled","added","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","backdrop","show","clickedi","modal","clicked","modalClosed","transform","opacity","button","orderSummary","ingredientsSummary","textTransform","purchaseCancelled","purchaseContinued","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","purchaseable","purchasing","addIngredientHandler","updatedCounted","updatedIngredients","priceAddition","newPrice","setState","updatePurchaseState","removeIngredientHanler","oldCount","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","alert","sum","disabledInfo","OrderSummary","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc54432c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import React from 'react';\r\nimport './Logo.css'\r\nimport burgerLogo from '../../../assets/images/burger-logo.png'\r\n\r\nconst logo = (props) => (\r\n    <div className=\"Logo\" style={{height: props.height}}>\r\n        <img className=\"Logo\" src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\nexport default logo;","import React from 'react';\r\nimport './NavigationItem.css'\r\n\r\nconst navigationItem = (props) =>(\r\n    <ul>\r\n        <li className=\"NavigationItem\">\r\n            <a \r\n            href={props.link}>{props.children}</a>\r\n        </li>\r\n    </ul>\r\n\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport './NavigationItems.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nconst navigationItems = () =>(\r\n    <ul className=\"NavigationItems\">\r\n        <NavigationItem link=\"/\">Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/\">CheckOut</NavigationItem>\r\n    </ul>\r\n\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport './Toolbar.css';\r\nimport Logo from '../../Layout/Logo/Logo';\r\nimport NavigationItems from '../NavigationItem/NavigationItems'\r\n\r\nconst toolbar = (props) => (\r\n    <header className=\"Toolbar\">\r\n        <div>Menu</div>\r\n        <Logo height=\"80%\" />\r\n        <nav className=\"DesktopOnly\">\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n\r\n);\r\n\r\nexport default toolbar;","import React  from 'react';\r\nimport Logo from '../../../components/Layout/Logo/Logo';\r\nimport NavigationItems from '../NavigationItem/NavigationItems';\r\nimport './SideDrawer.css'\r\n\r\n\r\nconst sideDrawer = (props) => {\r\n    //...\r\n    return (\r\n        <div className=\"SideDrawer\">\r\n            <div className=\"Logo\">\r\n                <Logo />\r\n            </div>            \r\n            <nav>\r\n                <NavigationItems />\r\n            </nav>\r\n            \r\n        </div>\r\n    );\r\n\r\n};\r\nexport default sideDrawer;\r\n","import React from 'react';\r\nimport './Layout.css';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer'\r\n\r\n\r\n\r\nconst Layout =( props ) => (\r\n    <div>\r\n\r\n        <Toolbar />\r\n        <SideDrawer />\r\n        <main className=\"Content\">\r\n            {props.children}\r\n        </main>\r\n    </div>\r\n);\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport './BurgerIngredient.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render () {\r\n        let ingredient = null;\r\n\r\n    switch (this.props.type){\r\n        case ('bread-bottem'):\r\n            ingredient = <div className=\"BreadBottom\"></div>;\r\n            break;\r\n        case ('bread-top'):\r\n            ingredient = (                \r\n                <div className=\"BreadTop\">\r\n                    <div className=\"Seeds1\"></div>\r\n                    <div className=\"Seeds2\"></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case ('meat'):\r\n            ingredient = <div className=\"Meat\"></div>;\r\n            break;\r\n        case ('cheese'):\r\n            ingredient = <div className=\"Cheese\"></div>;\r\n            break;\r\n        case ('bacon'):\r\n            ingredient = <div className=\"Bacon\"></div>;\r\n            break;\r\n        case ('salad'):\r\n            ingredient = <div className=\"Salad\"></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n\r\n    }\r\n    return ingredient;\r\n\r\n    }\r\n\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\n\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey => { //took ingredient from burgerBuilder and loop of ingredient\r\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n            return <BurgerIngredient key={igKey + i } type={igKey} />\r\n        });\r\n    })\r\n    .reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n    if (transformedIngredients.length === 0){\r\n        transformedIngredients=<p>Please start adding ingredients!</p>\r\n    }\r\n\r\n\r\n\r\n    console.log(transformedIngredients);\r\n    return (\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottem\" />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\nimport './BuildControl.css';\r\n\r\n\r\nconst BuildControl = (props) => (\r\n    <div className=\"BuildControl\">\r\n        <div className=\"Label\">{props.label}</div>\r\n        <button className=\"Less\" onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className=\"More\" onClick={props.added}>More</button>\r\n    </div>\r\n\r\n);\r\n export default BuildControl;","import React from 'react';\r\nimport './BuildControls.css'\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\n\r\nconst controls =[\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'},\r\n];\r\n\r\nconst BuildControls = (props) => (\r\n    <div className=\"BuildControls\">\r\n        <p>Current Price: <strong>${props.price.toFixed(2)}</strong>  </p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label} \r\n                added={() => props.ingredientAdded(ctrl.type)} \r\n                removed={() => props.ingredientRemoved(ctrl.type)} \r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button className=\"OrderButton\"\r\n        disabled={!props.purchasable}\r\n        onClick={props.ordered}>ORDER NOW</button>\r\n\r\n    </div>\r\n);\r\n\r\nexport default BuildControls;","import React from 'react';\r\nimport './Backdrop.css';\r\n//notes on 168, was suppose to create a clickable backgroup, but notes use <AUX> and i use div, but it didnt work (AUX dont work on windows)\r\nconst backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clickedi}></div> : null\r\n\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport './Modal.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst modal = (props) => (\r\n   <div>\r\n       <Backdrop show={props.show} clicked={props.modalClosed} />\r\n       <div className=\"Modal\"\r\n    style={{transform: props.show ? 'translateY(0)' : 'translatey(-100vh)',opacity: props.show ? '1':'0'}}>\r\n        {props.children}\r\n\r\n    </div>\r\n   </div> \r\n    \r\n\r\n);\r\n\r\nexport default modal;","import React from 'react';\r\nimport './Button.css';\r\n//notes 169, button have array[css]\r\nconst button = (props) => (\r\n    <button\r\n        className=\"Button\"\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Button from '../../UI/Button/Button';\r\nconst orderSummary = ( props ) => {\r\n    const ingredientsSummary=Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return (\r\n        <li key={igKey}>\r\n            <span style={{textTransform:'capitalize'}}>{igKey}</span>:{props.ingredients[igKey]}\r\n        </li>);\r\n    }); \r\n    return (\r\n        <div>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious Burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientsSummary}\r\n            </ul>\r\n            <p><strong>Total Price: ${props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button className='Danger' clicked={props.purchaseCancelled}>CANCEL</Button>\r\n            <Button className='Success'clicked={props.purchaseContinued}>CONTINUE</Button>\r\n\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default orderSummary;","import React, { Component } from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state ={//this ingredients pass to burger \r\n        ingredients: {\r\n             salad: 0,\r\n             bacon: 0,\r\n             cheese: 0,\r\n             meat: 0\r\n        },\r\n        totalPrice: 4,\r\n        purchaseable: false,\r\n        purchasing: false \r\n\r\n    }\r\n    updatePurchaseState (ingredients) {\r\n        const sum = Object.keys(ingredients).map(igKey => {\r\n            return ingredients[igKey];\r\n        })\r\n        .reduce((sum,el) => {\r\n            return sum + el;\r\n        }, 0);\r\n        this.setState({purchaseable: sum > 0});\r\n    }\r\n\r\n\r\n    \r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCounted = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCounted;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice=oldPrice + priceAddition;\r\n        this.setState({totalPrice: newPrice, ingredients:updatedIngredients})\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHanler = (type)=> {\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount <= 0){\r\n            return;\r\n        }\r\n        const updatedCounted = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCounted;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice=oldPrice - priceDeduction;\r\n        this.setState({totalPrice: newPrice, ingredients:updatedIngredients})\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = ()=> {\r\n        this.setState({purchasing: false});\r\n    }\r\n    purchaseContinueHandler = () => {\r\n        alert('You continue!');\r\n    }\r\n\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for( let key in disabledInfo){\r\n            disabledInfo[key]= disabledInfo[key]<=0\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    <OrderSummary \r\n                    ingredients={this.state.ingredients} \r\n                    price ={this.state.totalPrice}\r\n                    purchaseCancelled={this.purchaseCancelHandler}\r\n                    purchaseContinued={this.purchaseContinueHandler} />\r\n                </Modal>\r\n                <Burger ingredients={this.state.ingredients} />\r\n                <BuildControls \r\n                    ingredientAdded={this.addIngredientHandler} \r\n                    ingredientRemoved={this.removeIngredientHanler} \r\n                    disabled={disabledInfo} \r\n                    purchasable={this.state.purchaseable}\r\n                    ordered={this.purchaseHandler}\r\n                    price={this.state.totalPrice} />\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default BurgerBuilder;","import React from 'react';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\n\nfunction App() {\n  return (\n    //<div className=\"App\">\n    <div>\n      <Layout>\n        <BurgerBuilder />\n\n        \n      </Layout>\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}